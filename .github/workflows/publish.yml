name: Publish

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check github.ref starts with 'refs/tags/'
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo Error! github.ref does not start with 'refs/tags'
          echo github.ref: ${{ github.ref }}
          exit 1
      - name: Set version number environment variable
        shell: bash
        env:
          github_ref: ${{ github.ref }}
        run: |
          version="${github_ref:10}"
          echo version=$version
          echo "version=$version" >> $GITHUB_ENV
      - name: Use .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
          source-url: https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}
      - name: Install dependencies
        run: dotnet restore
      - name: Build solution [Release]
        shell: bash
        run: dotnet build --no-restore -c Release -p:Version=$version
      - name: Pack solution [Release]
        shell: bash
        run: dotnet pack --no-restore --no-build -c Release -p:Version=$version -o out
      - name: Upload workflow build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Nuget packages
          path: |
            out/*
      - name: Publish Nuget packages to NuGet registry
        run: dotnet nuget push "out\*" -k ${{secrets.NUGET_AUTH_TOKEN}}
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64
      - name: Install SHFB
        uses: Shane32/setup-SHFB@ffe9d55917ef7f63203c35528d53844409a1a502
        with:
          version: 2022.8.14.1
      - name: Build documentation
        working-directory: Doc
        run: msbuild EPPlusDoc.sln -t:rebuild -verbosity:minimal -property:Configuration=Release
      - name: Zip documentation
        working-directory: Doc/Help
        run: Compress-Archive -Path * -DestinationPath ..\..\out\Documentation.zip
#        run: zip -r ../../out/Documentation.zip .
      - name: Upload workflow documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Documentation
          path: Doc/Help
      - name: Upload Nuget packages and documentation as release artifacts
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log('environment', process.versions);
            const fs = require('fs').promises;
            const { repo: { owner, repo }, sha } = context;
            for (let file of await fs.readdir('out')) {
              console.log('uploading', file);
              await github.rest.repos.uploadReleaseAsset({
                owner,
                repo,
                release_id: ${{ github.event.release.id }},
                name: file,
                data: await fs.readFile(`out/${file}`)
              });
            }
